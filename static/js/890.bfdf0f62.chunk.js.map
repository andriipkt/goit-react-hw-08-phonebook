{"version":3,"file":"static/js/890.bfdf0f62.chunk.js","mappings":"4MACA,GAAgB,aAAe,iC,2DCgG/B,MAzFA,WACE,IAAAA,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAA4BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAClBG,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IAEvBC,EAAe,SAAAC,GACnB,IAAAC,EAAwBD,EAAME,OAAtBd,EAAIa,EAAJb,KAAMe,EAAKF,EAALE,MAEd,OAAQf,GACN,IAAK,OACHC,EAAQc,GACR,MAEF,IAAK,SACHV,EAAUU,GACV,MAEF,QACE,MAAO,eAEb,EA4BA,OACEC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,eAAmBH,SAAC,eACnCD,EAAAA,EAAAA,MAAA,QAAMK,SAXW,SAAAT,GACnBA,EAAMU,iBAnBW,SAACtB,EAAMI,GAKxB,GAJqBI,EAASe,MAC5B,SAAAC,GAAO,OAAIA,EAAQxB,KAAKyB,gBAAkBzB,EAAKyB,aAAa,IAI5D,OAAOC,EAAAA,OAAAA,QAAe,GAADC,OAAI3B,EAAI,6BAG/B,IAAM4B,EAAa,CACjB5B,KAAAA,EACAI,OAAAA,EACAyB,IAAIC,EAAAA,EAAAA,OAGNxB,GAASyB,EAAAA,EAAAA,IAAaH,GACxB,CAKEI,CAAWhC,EAAMI,GACjBH,EAAQ,IACRI,EAAU,GACZ,EAKiCY,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,SAAOe,QAAQ,YAAYd,UAAS,cAAAQ,OAAgBP,EAAAA,WAAgBH,SAAC,UAGrEC,EAAAA,EAAAA,KAAA,SACEC,UAAS,gBAAAQ,OAAkBP,EAAAA,cAC3BS,GAAG,YACHK,KAAK,OACLlC,KAAK,OACLmC,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,SAAU3B,EACVI,MAAOf,KAETkB,EAAAA,EAAAA,KAAA,SAAOe,QAAQ,cAAcd,UAAS,cAAAQ,OAAgBP,EAAAA,WAAgBH,SAAC,YAGvEC,EAAAA,EAAAA,KAAA,SACEC,UAAS,gBAAAQ,OAAkBP,EAAAA,cAC3BS,GAAG,cACHK,KAAK,MACLlC,KAAK,SACLmC,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRC,SAAU3B,EACVI,MAAOX,KAETc,EAAAA,EAAAA,KAAA,UAAQgB,KAAK,SAASf,UAAU,kBAAiBF,SAAC,qBAM1D,C","sources":["webpack://react-homework-template/./src/components/Phonebook/Phonebook.module.css?3a02","components/Phonebook/Phonebook.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactInput\":\"Phonebook_contactInput__LxSKY\"};","import { useState } from 'react';\nimport css from './Phonebook.module.css';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { addContactOp } from 'redux/contacts/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/selectors';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nfunction Phonebook() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return 'invalid name';\n    }\n  };\n\n  const addContact = (name, number) => {\n    const isNameExists = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (isNameExists) {\n      return Notify.failure(`${name} is already in contacts.`);\n    }\n\n    const newContact = {\n      name,\n      number,\n      id: nanoid(),\n    };\n\n    dispatch(addContactOp(newContact));\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    addContact(name, number);\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div>\n      <h1 className={css.phonebookTitle}>Phonebook</h1>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"nameInput\" className={`form-label ${css.formLabel}`}>\n          Name\n        </label>\n        <input\n          className={`form-control ${css.contactInput}`}\n          id=\"nameInput\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n          value={name}\n        />\n        <label htmlFor=\"numberInput\" className={`form-label ${css.formLabel}`}>\n          Number\n        </label>\n        <input\n          className={`form-control ${css.contactInput}`}\n          id=\"numberInput\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n          value={number}\n        />\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Add Contact\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default Phonebook;\n"],"names":["_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","dispatch","useDispatch","contacts","useSelector","selectContacts","handleChange","event","_event$target","target","value","_jsxs","children","_jsx","className","css","onSubmit","preventDefault","some","contact","toLowerCase","Notify","concat","newContact","id","nanoid","addContactOp","addContact","htmlFor","type","pattern","title","required","onChange"],"sourceRoot":""}